// <auto-generated />
using System;
using EducationProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducationProject.Migrations
{
    [DbContext(typeof(EducationprojectContext))]
    [Migration("20230304131753_addKey")]
    partial class addKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducationProject.Models.TbAssignment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int>("MatrialId")
                        .HasColumnType("int")
                        .HasColumnName("MatrialID");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "MatrialId");

                    b.HasIndex(new[] { "LevelId" }, "IX_TbAssignment_LevelId");

                    b.HasIndex(new[] { "MatrialId" }, "IX_TbAssignment_MatrialID");

                    b.ToTable("TbAssignment");
                });

            modelBuilder.Entity("EducationProject.Models.TbCode", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("CodeId");

                    b.HasIndex(new[] { "LevelId" }, "IX_TbCodes_LevelId");

                    b.HasIndex(new[] { "StudentId" }, "IX_TbCodes_StudentID");

                    b.ToTable("TbCodes");
                });

            modelBuilder.Entity("EducationProject.Models.TbLevel", b =>
                {
                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("YearLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LevelId");

                    b.ToTable("TbLevel");
                });

            modelBuilder.Entity("EducationProject.Models.TbMatrial", b =>
                {
                    b.Property<int>("MatrialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MatrialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatrialId"));

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("MatrialName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MatrialId");

                    b.HasIndex(new[] { "LevelId" }, "IX_TbMatrial_LevelId");

                    b.ToTable("TbMatrial");
                });

            modelBuilder.Entity("EducationProject.Models.TbStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("StudentFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StudentId");

                    b.HasIndex(new[] { "LevelId" }, "IX_TbStudent_LevelId");

                    b.ToTable("TbStudent");
                });

            modelBuilder.Entity("EducationProject.Models.TbTeacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("MatrialId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TeacherId");

                    b.HasIndex("MatrialId");

                    b.ToTable("TbTeacher");
                });

            modelBuilder.Entity("EducationProject.Models.TbVideo", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VideoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"));

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MatrialId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URL");

                    b.HasKey("VideoId");

                    b.HasIndex("MatrialId");

                    b.HasIndex("TeacherId");

                    b.HasIndex(new[] { "LevelId" }, "IX_TbVideos_LevelId");

                    b.ToTable("TbVideos");
                });

            modelBuilder.Entity("StudentMatrial", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int>("MatrialId")
                        .HasColumnType("int")
                        .HasColumnName("MatrialID");

                    b.HasKey("StudentId", "MatrialId");

                    b.HasIndex(new[] { "MatrialId" }, "IX_StudentMatrial_MatrialID");

                    b.ToTable("StudentMatrial", (string)null);
                });

            modelBuilder.Entity("TbMatrialTbStudent", b =>
                {
                    b.Property<int>("MatrialId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("MatrialId", "StudentId");

                    b.ToTable("TbMatrialTbStudent");
                });

            modelBuilder.Entity("EducationProject.Models.TbAssignment", b =>
                {
                    b.HasOne("EducationProject.Models.TbLevel", "Level")
                        .WithMany("TbAssignments")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_TbAssignment_TbLevel");

                    b.HasOne("EducationProject.Models.TbMatrial", "Matrial")
                        .WithMany("TbAssignments")
                        .HasForeignKey("MatrialId")
                        .IsRequired()
                        .HasConstraintName("FK_TbAssignment_TbMatrial");

                    b.HasOne("EducationProject.Models.TbStudent", "Student")
                        .WithMany("TbAssignments")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_TbAssignment_TbStudent");

                    b.Navigation("Level");

                    b.Navigation("Matrial");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EducationProject.Models.TbCode", b =>
                {
                    b.HasOne("EducationProject.Models.TbLevel", "Level")
                        .WithMany("TbCodes")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_TbCodes_TbLevel");

                    b.HasOne("EducationProject.Models.TbStudent", "Student")
                        .WithMany("TbCodes")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_TbCodes_TbStudent");

                    b.Navigation("Level");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EducationProject.Models.TbMatrial", b =>
                {
                    b.HasOne("EducationProject.Models.TbLevel", "Level")
                        .WithMany("TbMatrials")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_TbMatrial_TbLevel");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("EducationProject.Models.TbStudent", b =>
                {
                    b.HasOne("EducationProject.Models.TbLevel", "Level")
                        .WithMany("TbStudents")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_TbStudent_TbLevel");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("EducationProject.Models.TbTeacher", b =>
                {
                    b.HasOne("EducationProject.Models.TbMatrial", "Matrial")
                        .WithMany("TbTeachers")
                        .HasForeignKey("MatrialId")
                        .HasConstraintName("FK_TbTeacher_TbMatrial");

                    b.Navigation("Matrial");
                });

            modelBuilder.Entity("EducationProject.Models.TbVideo", b =>
                {
                    b.HasOne("EducationProject.Models.TbLevel", "Level")
                        .WithMany("TbVideos")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_TbVideos_TbLevel");

                    b.HasOne("EducationProject.Models.TbMatrial", "Matrial")
                        .WithMany("TbVideos")
                        .HasForeignKey("MatrialId")
                        .HasConstraintName("FK_TbVideos_TbMatrial");

                    b.HasOne("EducationProject.Models.TbTeacher", "Teachers")
                        .WithMany("TbVideos")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Level");

                    b.Navigation("Matrial");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("StudentMatrial", b =>
                {
                    b.HasOne("EducationProject.Models.TbMatrial", null)
                        .WithMany()
                        .HasForeignKey("MatrialId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentMatrial_TbMatrial");

                    b.HasOne("EducationProject.Models.TbStudent", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentMatrial_TbStudent");
                });

            modelBuilder.Entity("EducationProject.Models.TbLevel", b =>
                {
                    b.Navigation("TbAssignments");

                    b.Navigation("TbCodes");

                    b.Navigation("TbMatrials");

                    b.Navigation("TbStudents");

                    b.Navigation("TbVideos");
                });

            modelBuilder.Entity("EducationProject.Models.TbMatrial", b =>
                {
                    b.Navigation("TbAssignments");

                    b.Navigation("TbTeachers");

                    b.Navigation("TbVideos");
                });

            modelBuilder.Entity("EducationProject.Models.TbStudent", b =>
                {
                    b.Navigation("TbAssignments");

                    b.Navigation("TbCodes");
                });

            modelBuilder.Entity("EducationProject.Models.TbTeacher", b =>
                {
                    b.Navigation("TbVideos");
                });
#pragma warning restore 612, 618
        }
    }
}
